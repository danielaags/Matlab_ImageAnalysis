clear
% 
images = dir('*.tif');
fnamesM = dir('*_d*');
fnamesN = dir('d30*');
path = pwd;

numfids = length(fnamesM);
%numfids = 1;
delimiter = ',';
startRow = 2;
formatSpec = '%s%f%f%f%f%[^\n\r]';

%Read file day=30. File only needs to be read once.
filenameN = strcat(path, '\', fnamesN.name);
%Open the file.
fileID = fopen(filenameN,'r');
dataArrayN = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'TextType', 'string', 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
fclose(fileID);
%Extract information
namesN = dataArrayN{1};
centersN= [dataArrayN{2}, dataArrayN{3}];
radiiN = dataArrayN{4};

%Cell data type to save different radii
radii = cell(6,1);

%Find the radii across every single data point
for k = 1:5
%k
%File 
filenameM = strcat(path, '\', fnamesM(k).name);
%Open the file.
fileID = fopen(filenameM,'r');
dataArrayM = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'TextType', 'string', 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
fclose(fileID);
%Extract information
namesM = dataArrayM{1};
centersM = [dataArrayM{2}, dataArrayM{3}];
radiiM = dataArrayM{4};

%find in day M
isDayM = ones(length(namesN),1);
%id_y = zeros(length(namesN),1);
%id_x = zeros(length(namesN),1);
for i = 1:length(namesN)
    y = find(centersN(i,1)-5 <= centersM(:,1) & centersN(i,1)+5 >= centersM(:,1),1);
    if isempty(y)
        x = find(centersN(i,2)-5 <= centersM(:,2) & centersN(i,2)+5 >= centersM(:,2),1);
        if isempty(x)
            %No colony in time=15
            isDayM(i) = false;
        else
            isDayM(i) = x;
        end
    else
        isDayM(i) = y;
    end     
end
id = isDayM;
%Find new colonies identify before


%Check how many were identify in last day, useful to add new rows to our
%data frames
extra_rows = length(namesM) - sum(id>0);
%extra_rows = 0;

%New empty vectors
names = string(length(namesN)+extra_rows);
y = zeros(length(namesN)+extra_rows,1);
x = zeros(length(namesN)+extra_rows,1);
rN = zeros(length(namesN)+extra_rows,1);
rM = zeros(length(namesN)+extra_rows,1);

i = 1;
m = length(namesM);
n = length(namesN);

for k = 1:n
    if k <= m
        flag = find(k == id,1);
        if isempty(flag)
            %Add new values. Colony not found in day30 but day15
            names(n+i) = namesM(k);
            y(n+i) = centersM(k,1);
            x(n+i) = centersM(k,2);
            rN(n+i) = radiiM(k);
            rM(n+i) = radiiM(k);
            i = i + 1;
            %Index from day30. No info from day15
            names(k) = namesN(k);
            y(k) = centersN(k,1);
            x(k) = centersN(k,2);
            rN(k) = radiiN(k);
            rM(k) = 0;
        else
            names(flag) = namesN(flag);
            y(flag) = centersN(flag,1);
            x(flag) = centersN(flag,2);
            rN(flag) = radiiN(flag);
            rM(flag) = radiiM(k);
        end
    end
    if k ~= flag
        names(k) = namesN(k);
        y(k) = centersN(k,1);
        x(k) = centersN(k,2);
        rN(k) = radiiN(k);
        rM(k) = 0;
    end
end

%Take data and replace *N with the updated date collected from dataN and
%dataM
namesN = names;
centersN= [y, x];
radiiN = rN;
radii{k+1} = rM; 
end
radii{1} = radiiN;

%Remove 0 in between data points with values > 0
for i = 2:numfids-1
    rows1 = length(names)-length(radii{i});
    rows2 = length(names)-length(radii{i+1});
    radii{i} = [radii{i};zeros(rows1,1)];
    radii{i+1} = [radii{i+1};zeros(rows2,1)];
    idx = radii{i} < radii{i+1};
    radii{i}(idx) = radii{i+1}(idx);  
end

%Calculate the growth rate
%%k = n/t%%
k = (log10(radii{3})-log10(radii{4}))/0.301*5;


%Collect data in a table, better visualization. COnsidered other data types
file_name = split(fnamesN.name, '.');
save(strcat(file_name{1},'-radii.mat'), 'radii');

s = struct('Label', names', 'y', y, 'x', x, 'growth', k);
save(strcat(file_name{1},'-data.mat'), 's');

% varNames = {'Label', 'y', 'x', 'r5', 'r10', 'r15', 'r20', 'r25', 'r30', 'growth'};
% T = table(names', y, x, radii{6}, radii{5}, radii{4}, radii{3}, radii{2}, radii{1}, k, 'VariableNames',varNames);
% writetable(T,strcat(file_name{1},'-radii.csv'),'Delimiter',',');


%Get the BW images based on the collapse centroids, it will be used to
%capture the PixelValues. The radius will change over time.
% output = zeros(m,1);
% std_pixel = cell(6,1);
% max_pixel = cell(6,1);
% min_pixel = cell(6,1);
% mean_pixel = cell(6,1);
% wc_pixel = cell(6,1);

for i = 1:length(images)
        file= images(i).name;
        filename = split(file, '.');
        I = imread(file, 'tif');
    for j = 1:3
        rgbI = I(:,:,j);
        %Create BW canvas
        imageSize = size(rgbI);
        BW = false(imageSize);

        %The number of identified colonies don't stay the same. I will better
        %save the whole struct with centroids included to filter later.
        imshow(rgbI);
        hold on
        for k = 1:length(names)
            h = drawcircle(gca,'Center',centersN(k,:),'Radius',(radii{i}(k)));
            mask = h.createMask();
            BW = BW | mask;
        end
        hold off
        close

        % figure
        % imshow(BW)

        %Better to have a different name for the different structures
        r = regionprops(BW,rgbI,{'Centroid','PixelValues', 'MaxIntensity', 'MinIntensity', 'MeanIntensity'});
        %length(s)

    %     for k = 1 : length(s)
    %         output(k) = std(double(s(k).PixelValues));
    %     end
        %Save according to RGB channel
        if j == 1
            %Better to have a different name for the different structures
            statsPixel_red = regionprops(BW,rgbI,{'Centroid','PixelValues', 'MaxIntensity', 'MinIntensity', 'MeanIntensity'});
            save(strcat(filename{1},'-pixel_red.mat'), 'statsPixel_red');
        elseif j == 2
            %Better to have a different name for the different structures
            statsPixel_green = regionprops(BW,rgbI,{'Centroid','PixelValues', 'MaxIntensity', 'MinIntensity', 'MeanIntensity'});
            save(strcat(filename{1},'-pixel_green.mat'), 'statsPixel_green');
        else
            %Better to have a different name for the different structures
            statsPixel_blue = regionprops(BW,rgbI,{'Centroid','PixelValues', 'MaxIntensity', 'MinIntensity', 'MeanIntensity'});
            save(strcat(filename{1},'-pixel_blue.mat'), 'statsPixel_blue');
        end
        
        
    end
end
